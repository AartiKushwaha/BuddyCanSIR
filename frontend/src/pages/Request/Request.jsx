import React, { useState, useEffect, useContext, useRef } from "react";
import "./request.css";
import Navigation from "../../components/Navigation/Navigation";
import Footer from "../../components/Footer/Footer";
import { Context } from "../../context/Context";
import axios from "axios";
import Indicator from "../../components/Indicator/Indicator";

export default function Request() {
  const { user } = useContext(Context);

  const [status, setStatus] = useState("");
  const [rid, setRid] = useState("");

  useEffect(() => {
    const fetchRequests = async () => {
      const res = await axios.get(`/requests?user=${user.username}`)
      if(typeof(res) !== 'undefined') {
        setStatus(res.data[0].status)
        setRid(res.data[0]._id)
      }
    }
    fetchRequests()
  }, [])


  const [track, setTrack] = useState("");
  const [category, setCategory] = useState("");

  const sentText = () => {
    try {
      // axios.post("/msg", {
      //   to: '+918630522163',
      //   message: `New request generated by the user(${user.username}) with uid(${user._id})`
      // });
    } catch (err) {

    }
  }

  const handleSubmit = async (e) => {
    const newRequest = {
      uid: user._id,
      username: user.username,
      address: user.address,
      category,
      track,
      status: "requested",
    };
    try {
      await axios.post("/requests", newRequest);
      window.location.replace("/");
    } catch (err) {

    }
  }

  const handleNewRequest = async () => {
    try{
      await axios.delete("requests/" + rid);
      window.location.replace("/request")
    } catch (err) { }

  }

  const handleDocSubmit = async (e) => {
    try {
      // axios.post("/msg", {
      //   to: '+918630522163',
      //   message: `Documents were uploaded by the user(${user.username}) with uid(${user._id})`
      // });
    } catch (err) {

    }
  }

  const [file, setFile] = useState("");
  const [url, setUrl] = useState("");

  console.log(file);

  const uploadImage = () => {
    const data = new FormData();
    data.append("file", file);
    data.append("upload_preset", "pb3pgaem");

    data.append("cloud_name", "dd8m2rptw");
    axios.post("https://api.cloudinary.com/v1_1/dd8m2rptw/image/upload", data
    ).then((resp) => resp.json()).then((data) => {
        setUrl(data.secure_url);
        console.log(url)
      })
      .catch((err) => console.log(err));
  };

  const handleDocUpload = async (e) => {
    const init = "https://res.cloudinary.com/dd8m2rptw/image/upload/"
    const updateRequest = {
      funded_doc: init+"v1655131406/h49yndlk93weuszvr5nq.jpg",
      marksheet: init+"v1655131539/avtjuksn6ftiwi8rgys4.jpg",
      attendance_record: init+"v1655131113/m9lhnfdaydd1luioccdt.jpg",
      education_fee_record: init+"v1655130809/xdnghalbvsfzjmysdkpz.jpg",
      hospital_doc: init+"v1655131709/bz6pvc6ere7gymlfdgx2.jpg",
      status: "doc_uploaded"
    };
    try {
      await axios.put("/requests/"+rid, updateRequest);
    } catch (err) {
    }
  }

  function Content() {
    if (status == "") {
      return (
        <>
          <h2 style={{textAlign: "center"}}>Request</h2>
          <form className="request-form" onSubmit={handleSubmit}>
            <div id="track">
              <p className="subhead doc-text"><b>What kind of help do you want us to provide?</b></p>
              <div className="row">
                <div className="col-md-3 col-sm-12">
                  &nbsp;&nbsp; <input type="radio" name="track" defaultValue="financial"
                    onChange={(e) => setTrack(e.target.value)}
                  />
                  &nbsp; <label className="doc-text">Financial</label>
                </div>
                <div className="col-md-4 col-sm-12">
                  &nbsp;&nbsp; <input type="radio" name="track" defaultValue="non-financial"
                    onChange={(e) => setTrack(e.target.value)}
                  />
                  &nbsp; <label className="doc-text">Non Financial</label><br />
                </div>
              </div>
            </div>
            <div id="category">
              <p className="subhead doc-text"><b>Please choose one of the category?</b></p>
              <div className="row">
                <div className="col-md-3 col-sm-12">
                  &nbsp;&nbsp;&nbsp;<input type="radio" name="category" defaultValue="health"
                    onChange={(e) => setCategory(e.target.value)}
                  />
                  &nbsp; <label className="doc-text">Health</label>
                </div>
                <div className="col-md-3 col-sm-12">
                  &nbsp;&nbsp; <input type="radio" name="category" defaultValue="education"
                    onChange={(e) => setCategory(e.target.value)}
                  />
                  &nbsp; <label className="doc-text">Education</label>
                </div>
                <div className="col-md-3 col-sm-12">
                  &nbsp;&nbsp; <input type="radio" name="category" defaultValue="livelihood"
                    onChange={(e) => setCategory(e.target.value)}
                  />
                  &nbsp; <label className="doc-text">Livelihood</label>
                </div>
                <div className="col-md-3 col-sm-12">
                  &nbsp;&nbsp; <input type="radio" name="category" defaultValue="life skills"
                    onChange={(e) => setCategory(e.target.value)}
                  />
                  &nbsp; <label className="doc-text">Life skills</label>
                </div>
              </div>
            </div>

            <p className="subhead doc-text"><b>Reason for request(Upto 50 words)</b></p>
            <textarea id="w3review" name="reason" rows="1" cols="20" placeholder="Describe your request here..."
            // onChange={(e) => setReason(e.target.value)}
            ></textarea>

            <p className="subhead doc-text"><b>Checkmark the condition(In order to raise a request all the following conditions should be fulfilled.)</b></p>
            <input type="checkbox" id="condition1" name="condition1" value="c1"
            // onClick={(e) => setAgree(e.target.checked)} 
            />
            <label className="doc-text" for="condition1"> My schooling gap is less than 3 years.</label><br />
            <input type="checkbox" id="condition2" name="condition2" value="c2"
            // onClick={(e) => setAgree2(e.target.checked)}
            />
            <label className="doc-text" for="condition2">I have recent schooling year marksheet.</label><br />
            <button type="submit" className="doc-text request-btn" onClick={sentText}>Submit</button>  
          </form>
        </>)
    } else if (status === "closed" || status === "approved") {
      return (
        <>
          {status === "approved" ?       
          <>    
          <h2 style={{textAlign: "center"}}>Application Approved</h2>
          <p className="req-text-center">Your request has been approved. Fund will be provided to the institute directly.</p>
          </>
          : 
          <>
          <h2 style={{textAlign: "center"}}>Application Closed</h2>
          <p className="req-text-center">Your application has been closed. Contact organization for further information.</p>
          </>
          }
          <div className="center">
          <button onClick={handleNewRequest} className="request-btn doc-text">Raise New Request</button>
          </div>
        </>)
    } else if (status === "requested") {
      return (
        <>
          <h2 style={{textAlign: "center"}}>Request Verification</h2>
          <p className="req-text-center">Your request is being verified, sms/email will be sent to you when verification process is completed.</p>
        </>)
    } else if (status === "verified") {
      return (
        <>
        
        <h2 style={{textAlign: "center"}}>Upload Documents</h2>
          <p className="req-text-center">Your request has been verified. Please upload the following documents.</p>

          {/* Forms section */}
          <form onSubmit={handleDocSubmit}>
              <div className="file-upload">
                  <div className="row">
                    <div className="">
                      <label htmlFor="">Marksheet, Attendance Record, Medical Record, College/School fees Record, Funding documents</label>
                      <label htmlFor="" style={{margin: "15px 0"}}>Current permitted file type: .jpeg, .jpg, .png</label>
                      <input type="file" onChange={(e) => setFile(e.target.files[0])} multiple/>
                      <p>
                      (You have to upload multiple documents here.)
                      </p>
                      {/* <button onClick={uploadImage}>upload</button> */}
                    </div>
                  </div>
                </div>
              <input type="text" name="user_id" value={user._id} hidden/>
              <div className="center">
            <button type="submit" className="request-btn" onClick={handleDocUpload}>Submit</button>
              </div>
            </form>
        </>)
    } else if (status === "doc_uploaded") {
      return (
        <>
          <h2 style={{textAlign: "center"}}>Document Verification</h2>
          <p className="req-text-center">Your documents have been uploaded successfully, wait for further instruction through sms/email.</p>
        </>)
    } else {
      return (
        <>
          <p>Not Permitted!</p>
        </>);
    }
  }

  return (
    <>
      <Navigation />
      <div className="request-container">
      <p className="info" style={{marginTop:"30px"}}>USER: {user.username}</p>
      <br />
      <p className="info">STATUS: {status}</p>
      {(status === "closed" || status === "approved" || status === "doc_uploaded" || status === "verified") ?
          <Indicator step={2}/> : <Indicator step={1}/> }
      <div className="request-div">
      {Content()}
      </div>
      </div>
      <Footer />
    </>
  );
}